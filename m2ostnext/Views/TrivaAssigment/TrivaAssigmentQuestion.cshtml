@{
    ViewBag.Title = "TrivaAssigment";
    Layout = "~/Views/Shared/_cms_Layout.cshtml";
    List<m2ostnext.Models.tbl_learning_question> QuestionModelList = (List<m2ostnext.Models.tbl_learning_question>)ViewData["QuestionModelList"];
 
        int idCategory = (int)ViewData["IdCategory"];
    
}

<link rel="stylesheet" href="~/Content/datatable/css/jquery.dataTables.min.css" />
<link rel="stylesheet" href="~/Content/datatable/css/dataTables.bootstrap.min.css" />
<script type="text/javascript" src="~/Content/datatable/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>

<script>
    $(document).ready(function () {


        $('#report-table').DataTable({
            "paging": true,
            "searching": true, // enables the search functionality
            "ordering": true,  // enables column sorting
            "info": true,      // shows additional info like total records
            "lengthMenu": [10, 25, 50, 100], // pagination options
            "pageLength": 10  // default number of rows per page
        });
    });
    $(document).ready(function () {
        $('.UsertoDisplayA').hide();
        $('.UsertoDisplayA1').hide();
        $("#report-table-temp").dataTable({
            "pageLength": 10
        });
        $("#report-table-note").dataTable({
            "pageLength": 10
        });
        $("#datetimepicker1").datetimepicker({
            dateFormat: "dd-mm-yy",
            minDate: new Date(),
            onSelect: function (dateText, inst) {
                event.preventDefault();  // Prevent default action if necessary
            }
        });
        $("#datetimepicker2").datetimepicker({
            dateFormat: "dd-mm-yy",
            minDate: new Date(),
            onSelect: function (dateText, inst) {
                event.preventDefault();  // Prevent default action if necessary
            }
        });
        $("[name='role-checkbox']").bootstrapSwitch({ 'size': 'mini', 'state': true });
    });



</script>
<style>
    .select-checkbox:before, .select-checkbox:after {
        display: block;
        position: absolute;
        top: 1.2em;
        left: 50%;
        width: 12px;
        height: 12px;
        box-sizing: border-box;
    }

    .select-checkbox:after {
        content: '\2714';
        margin-top: -11px;
        margin-left: -4px;
        text-align: center;
        text-shadow: 1px 1px #B0BED9, -1px -1px #B0BED9, 1px -1px #B0BED9, -1px 1px #B0BED9;
    }


    /* Unique class for the table */
    .custom-table {
        width: 100%;
        background: #ffffff;
        border-collapse: collapse;
    }

        /* Styling for the table head */
        .custom-table thead {
            background: #793079;
            color: #ffffff;
            display: table;
            width: 100%; /* Adjust for scrollbar width */
        }

        /* Styling for the table body */
        .custom-table tbody {
            display: block;
            max-height: 280px; /* Set the height you want */
            overflow-y: auto;
            width: 100%;
        }

        /* Table row styling */
        .custom-table tr {
            display: table;
            width: 100%;
            table-layout: fixed; /* Ensure columns have the same width */
            border: 1px solid gray;
        }

        /* Table cell styling */
        .custom-table th, .custom-table td {
            padding: 8px;
            text-align: left;
            border: 1px solid gray;
        }
</style>
<div class="row clearfix">
    <div class="col-md-12 column">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h6 class="panel-title">Trivia Assignment</h6>
            </div>

            <div class="panel-body">

                <div class="row">
                    <div class="col-md-2"><h5>Program: </h5></div>
                    <div class="col-md-10">
                        <input type="hidden" id="id_Category" value="@idCategory" />
                            @*<pre>@category.CATEGORYNAME</pre>*@
                    </div>
                </div>
                <table id="report-table-temp" class="table table-striped table-bordered dataTable small" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Content </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in QuestionModelList)
                        {
                            <tr><td>@item.Question</td></tr>
                        }
                    </tbody>
                </table>
                @*<hr />*@
                <!--<div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="FirstName" class="control-label col-md-2 regLabel">Notification :</label>
                            <div class="col-md-9">
                                <select class="form-control" id="notification-select" name="notification-select" onchange="setNotification(this.value)">
                                    <option value="1">Notification Required</option>
                                    <option value="0">Notification Not Required</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="FirstName" class="control-label col-md-2 regLabel">Select Category Tile :</label>
                            <div class="col-md-9">
                                <select class="form-control" id="tile-category" name="tile-category" onchange="fun_parent_check(this.value)">
                                    <option value="0" disabled selected>Select Category Tile</option>-->
                @*@foreach (tbl_category_tiles items in catList)
                    {
                        <option value="@items.id_category_tiles"> @items.tile_heading</option>
                    }*@
                <!--</select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="FirstName" class="control-label col-md-2 regLabel">Select Category Heading :</label>
                            <div class="col-md-9">
                                <select class="form-control" id="heading-category" name="heading-category" onchange="getval(this);">
                                    <option value="" disabled selected>Select Category Heading</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>-->
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-2"><label class="control-label"> Start Date</label></div>
                            <div class="col-md-4">
                                <div class='input-group date'>
                                    <input type='text' class="form-control validate[required]" id='datetimepicker1' name="start-date" onchange="get_startdate(this.value);" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-2"><label class="control-label">Expiry Date</label></div>
                            <div class="col-md-4">
                                <div class='input-group date'>
                                    <input type='text' class="form-control validate[required]" id='datetimepicker2' name="expiry-date" onchange="get_enddate(this.value);" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />

                <!--<div id="notification-div">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h6 class="panel-title">Notification</h6>
                        </div>
                        <div class="panel-body">
                            <table id="report-table-note" class="table table-striped table-bordered dataTable small" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th width="40%">Notification</th>
                                        <th width="40%">Message</th>
                                        <th width="15%">Notification Type</th>
                                        <th></th>
                                    </tr>
                                </thead>

                                <tbody>-->
                @*@foreach (tbl_notification item in notification)
                    {
                        <tr>
                            <td>
                                <i class="glyphicon glyphicon-eject"></i>    @item.notification_name
                            </td>
                            <td>
                                @item.notification_message
                            </td>
                            <td>
                                @if (item.notification_type == 1)
                                {
                                    @("Generic Notification")
                                }
                                else if (item.notification_type == 2)
                                {
                                    @("Event based Notification")
                                }
                                else if (item.notification_type == 3)
                                {
                                    @("Content Specific Notification")
                                }
                                else if (item.notification_type == 4)
                                {
                                    @("Content Reminder Notification")
                                }

                            </td>

                            <td>
                                <input class="select-checkbox" type="radio" name="select_notification_check" value="@item.id_notification" onclick="get_notification(this.value);">
                            </td>
                        </tr>
                    }*@
                <!--</tbody>
                            </table>


                        </div>
                    </div>
                </div>-->
                <hr />
                <h5 class="panel-title">Select Role/User filter</h5>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        <a class="btn btn-primary btn-block" onclick="RoleType(1)" href="javascript:void(0)">Role Based Search</a>
                    </div>
                    @*<div class="col-md-2">
                            <a class="btn btn-primary btn-block" style="padding:0%;" onclick="RoleType(5)" href="javascript:void(0)">Function Based Search</a>
                        </div>
                        <div class="col-md-2">
                            <a class="btn btn-primary btn-block" style="padding:0%;" onclick="RoleType(2)" href="javascript:void(0)">Location Based Search</a>
                        </div>
                        <div class="col-md-2">
                            <a class="btn btn-primary btn-block" onclick="RoleType(3)" href="javascript:void(0)">User Based Search</a>
                        </div>*@
                    <div class="col-md-2">
                        <a class="btn btn-primary btn-block" onclick="RoleType(4)" href="javascript:void(0)">All Users</a>
                    </div>
                    <input type="hidden" id="role-type" name="role-type" value="0" />
                </div>

                <hr />
                <div class="row" id="div-row-role" style="display:none;">
                    <div class="col-md-12">
                        <h6 class="panel-title">Select User Role to filter</h6>
                        <select class="form-control" id="role-select">
                            <option value="0" disabled selected>Select Role</option>
                            @foreach (tbl_csst_role item in (List<tbl_csst_role>)ViewData["RoleList"])
                            {
                                <option value="@item.id_csst_role">@item.csst_role</option>
                            }
                        </select>
                        <input type="text" class="form-control" placeholder="Search by User Name (minimum 3 character)" id="search-box" />
                        <br />
                        <input type="button" class="btn btn-primary btn-sm " value=" Search " id="id_search1" onclick="getContentReport(1)" />
                        <hr />

                        <div id="">
                            <div style="display:flex; justify-content:space-between; margin-top:5px">
                                <div>
                                        <label class="checkbox-inline">
                                            <input type="checkbox" id="role-checkbox" name="role-checkbox" onchange="addProgramToRole(0)"> Attach Role to Triva
                                        </label>
                                    </div>
                                <div>
                                    <a style="background: DodgerBlue; color: white; border: none; border-radius: 5px; width: 159px; height: 28px; padding: 2px 5px;" href="~/Content/AppUserTemplate/uploaduser_Assessment.xlsx" download>
                                        <i class="fa fa-download"></i> Download Template
                                    </a>
                                </div>
                                <div>
                                    <input type="file" id="csvFileInput">
                                    <label id="csvFile" style="color: maroon; margin: 0px; display: none;">Required Excel Field</label>
                                </div>
                                <button id="activateButton" style="background: #1ab394; color: #fff; border: none; border-radius: 5px; width: 159px; height: 28px; padding: 2px 5px;">Upload</button>
                            </div>
                            <table class="custom-table">
                                <thead>
                                    <tr>
                                        <th scope="col" class="UsertoDisplayA">User ID not Present in the above Role</th>
                                        <th scope="col" class="UsertoDisplayA1">User ID Allready Assigned</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td id="nonExistentUserIdsListA" class="UsertoDisplayA"></td>
                                        <td id="allreadyUserIds" class="UsertoDisplayA1"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>


                    <div class="row" id="div-alert">
                        <div class="form-group">
                            <div class="col-md-12">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="div-row-location" style="display:none;">
                    <div class="col-md-12">
                        <h6 class="panel-title">Select User Location to filter</h6>
                        <select class="form-control" id="location-select">
                            <option value="0" disabled selected>Select Location</option>
                            @*@foreach (string item in location)
                                {
                                    <option value="@item">@item</option>
                                }*@
                        </select>
                        <input type="text" class="form-control" placeholder="Search by User Name (minimum 3 character)" id="search-lbox" />
                        <br />
                        <input type="button" class="btn btn-primary btn-sm " value=" Search " id="id_search2" onclick="getContentReport(2)" />
                        <hr />
                        @*<input id="program-assignment" type="button" class="btn btn-primary btn-sm" value="Add Assessment to Role" onclick="addProgramToLocation(0)" />
                            <input id="program-assignment" type="button" class="btn btn-primary btn-sm" value="Remove Assessment from Role" onclick="removeUserbasedContentToUser(0)" />*@
                    </div>
                </div>

                <div class="row" id="div-row-function" style="display:none;">
                    <div class="col-md-12">
                        <h6 class="panel-title">Select User Function to filter</h6>
                        <select class="form-control" id="function-select">
                            <option value="0" disabled selected>Select Function</option>
                            @*@foreach (string item in function)
                                {
                                    <option value="@item">@item</option>
                                }*@
                        </select>
                        <input type="text" class="form-control" placeholder="Search by User Name (minimum 3 character)" id="search-lbox" />
                        <br />
                        <input type="button" class="btn btn-primary btn-sm " value=" Search " onclick="getContentReport(5)" />
                        <hr />
                        @*<input id="program-assignment" type="button" class="btn btn-primary btn-sm" value="Add Assessment to Role" onclick="addProgramToLocation(0)" />
                            <input id="program-assignment" type="button" class="btn btn-primary btn-sm" value="Remove Assessment from Role" onclick="removeUserbasedContentToUser(0)" />*@
                    </div>
                </div>
                <div class="row" id="div-row-user" style="display:none;">
                    <div class="form-group">
                        <div class="col-md-12">
                            <h6 class="panel-title">Search by User </h6>
                            <input type="text" class="form-control" placeholder="Search by User Name (minimum 3 character)" id="search-box-user" />
                            <br />
                            <input type="button" class="btn btn-primary btn-sm " value=" Search " id="id_search3" onclick="getContentReport(3)" />
                            <input type="button" class="btn btn-primary btn-sm " value="Reset" onclick="reset_user()" />
                            <hr />
                            <input id="program-to-all" type="button" class="btn btn-primary btn-sm" value="Add Program to All User" onclick="addProgramToAllUser(0)" />
                        </div>
                    </div>
                </div>
                <div class="row" id="div-row-all" style="display:none;">
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="alert alert-info alert-dismissable">
                                <input id="programToAll" type="button" class="btn btn-primary btn-sm" value="Add Program to All User" onclick="addProgramToAll(0)" /><strong>&nbsp;&nbsp; Click to Assign Program to Role </strong>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <!------------------------------------------------------------------------------>
                <form method="post" id="Assessment_form" action="/contentDashboard/setProgramToMultiUser">
                    <input type="hidden" value="" name="category_tile" id="category_tile" />
                    <input type="hidden" value="" name="category_heading" id="category_heading" />
                    <input type="hidden" value="1" name="notification_req" id="notification_req" />
                    <input type="hidden" value="" name="start_date" id="start_date" />
                    <input type="hidden" value="" name="end_date" id="end_date" />
                    <input type="hidden" id="id_Category" name="id_Category" value="@idCategory" />
                    <input type="hidden" id="id_sbCategory" name="id_sbCategory" />
                    <input type="hidden" id="role-type" name="role-type" />
                    <input type="hidden" id="role-Id" name="role-Id" value="" />

                    <input type="hidden" value="" name="notification_id" id="notification_id" />
                    @*  <input type="hidden" value=@category.CATEGORY_TYPE name="CATEGORY_TYPE" id="CATEGORY_TYPE" />*@


                    <div id="display_table">


                    </div>

                    <script>

                    </script>
                    <!--------------------------------------------------------------------------------->
                    <div class="row">
                        <div class="col-md-10">
                        </div>
                        <div class="col-md-2">
                            <input id="notification-to-all" type="button" class="btn btn-primary btn-sm pull-right" value="Apply Trivia" onclick="Multi_user()" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>

            function RoleType(val) {
        $("#role-type").val(val);
        $("#display_table").empty();
        if (val == 1) {
            $("#div-row-role").show();
            $("#div-row-user").hide();
            $("#div-row-all").hide();
            $("#div-row-location").hide();
            $("#div-row-function").hide();
        } else if (val == 2) {
            $("#div-row-role").hide();
            $("#div-row-user").hide();
            $("#div-row-all").hide();
            $("#div-row-location").show();
            $("#div-row-function").hide();
        } else if (val == 3) {
            $("#div-row-role").hide();
            $("#div-row-user").show();
            $("#div-row-all").hide();
            $("#div-row-location").hide();
            $("#div-row-function").hide();
        } else if (val == 4) {
            $("#div-row-role").hide();
            $("#div-row-user").hide();
            $("#div-row-all").show();
            $("#div-row-location").hide();
            $("#div-row-function").hide();
            $("#notification-to-all").hide();
        }

    }
      function getContentReport(type) {
      debugger;
          loading_on();
          var cid = $("#id_Category").val();
      //$('.id_search').prop('disabled', true);
      var id = $("#role-select").val();
      var url = '@Url.Action("getUserListForRole", "TrivaAssigment")';

      var  pattern = $("#search-box").val().trim();

      var std = $("#datetimepicker1").val();
      var exd = $("#datetimepicker2").val();
      if (std && exd) {


          const url_1 = window.location.href;  // This will get the current URL dynamically

          // Split the URL by '/' and get the last segment
          const segments = url_1.split('/');

          // Extract the last part dynamically
          const sid = segments[segments.length - 1];
          var count = pattern.trim().length;


              if (count >= 3 || id > 0) {
                  $.ajax({
                      type: 'POST',
                      url: url,
                      data: { id: id, pattern: pattern, cid: cid, sid: sid, type: type },

                      success: function (data) {
                          loading_off();

                          $('.id_search').prop('disabled', false);
                          $("#display_table").empty().append(data);
                          $("#report-table").dataTable({
                              "bSort": false,
                              "pageLength": 50
                          });
                      }
                  });

              } else {
                  if (id == 0) {
                      loading_off();
                      $('.id_search').prop('disabled', false);
                      $("#msg-txt").html("<p>Enter minimun of 3 character to search</p>");
                      $('#m2ost-dialog').modal('show');
                  }
              }

      } else {
          loading_off();
          $('.id_search').prop('disabled', false);
          $("#msg-txt").html("<p>Please select Start and Expiry Date For Assessment</p>");
          $('#m2ost-dialog').modal('show');
      }
      //loading_off();
    }
    function get_startdate(sel) {

        $("#start_date").val(sel);

    }

    function get_enddate(sel) {


        $("#end_date").val(sel);

    }
    ////

    $(document).ready(function () {
    $('#activateButton').click(function () {
        debugger;


        if (!validateSelection()) {
            return; // Stop execution if validation fails
        }

        loading_on();
        const url_1 = window.location.href;  // This will get the current URL dynamically

        // Split the URL by '/' and get the last segment
        const segments = url_1.split('/');

        // Extract the last part dynamically
        const cid = segments[segments.length - 1];
        debugger;
        var std = $("#datetimepicker1").val();
        var exd = $("#datetimepicker2").val();

        var idrole = $("#role-select").val();

        $('#csvFileInput1').val(''); // Clear file input field

        var file = $('#csvFileInput').prop('files')[0];
        if (!file) {
            $('#csvFile').show().text('Please select an xlsx file.');
            return;
        }

        var fileName = file.name;
        var fileExtension = fileName.split('.').pop().toLowerCase();

        // Check if the file extension is XLSX
        if (fileExtension !== 'xlsx') {
            $('#csvFile').show().text('Please select an xlsx file.');
            $('#csvFileInput').val(''); // Clear the file input
            return;
        }

        $('#csvFile').hide(); // Hide error message if shown

        var reader = new FileReader();
        reader.onload = function (e) {
            var data = new Uint8Array(e.target.result);
            var workbook = XLSX.read(data, { type: 'array' });
            var sheetName = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[sheetName];
            var jsonData = XLSX.utils.sheet_to_json(worksheet);

            var invalidRows = [];
            var userIdStatusArray = jsonData.map(function (row, index) {
                var userId = row['Userid'];

                // Validation for blank columns
                if (!userId) {
                    invalidRows.push({
                        row: index + 1, // Row number (1-based index)
                        missingFields: {
                            IdUser: !userId
                        }
                    });
                }

                return {
                    IdUser: userId,
                    IdLearningSubCategory: cid,
                    StartDate: std,
                    EndDate: exd,
                    IdRole: idrole
                };
            });

            if (invalidRows.length > 0) {
                var message = "The following rows have missing fields:\n";
                var tableContent = "<ul>";

                invalidRows.forEach(function (row) {
                    message += "Row " + row.row + ": ";
                    tableContent += "<li>Row " + row.row + ": <ul>";

                    for (var field in row.missingFields) {
                        if (row.missingFields[field]) {
                            message += field + " is missing.\n";
                            tableContent += "<li>" + field + " is missing.</li>";
                        }
                    }

                    message += "\n";
                    tableContent += "</ul></li>";
                });

                tableContent += "</ul>";
                alert(message);

                return;
            }

            // Function to send data in chunks of 50 rows
            function sendDataInChunks(dataArray, chunkSize) {
                let totalChunks = Math.ceil(dataArray.length / chunkSize);
                console.log(`Total chunks: ${totalChunks}`);

                for (let i = 0; i < totalChunks; i++) {
                    let chunk = dataArray.slice(i * chunkSize, (i + 1) * chunkSize);
                    let isLastChunk = (i === totalChunks - 1); // Check if it's the last chunk

                    console.log(`Sending chunk ${i + 1}/${totalChunks} with size: ${chunk.length}`);

                    // Send each chunk via AJAX
                    $.ajax({
                        url: '@Url.Action("uplodeUserID", "TrivaAssigment")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ userIdStatusArray: chunk, isLastChunk: isLastChunk }),
                        success: function (result) {
                            if (isLastChunk) {
                                loading_off();
                                alert(result.message);

                                if (result.success) {
                                    fetchNonExistentUserIds();
                                } else {
                                    alert("Error: " + result.message);
                                    fetchNonExistentUserIds();
                                }
                            }
                        },
                        error: function (error) {
                            alert("Error occurred while processing the request.");
                            console.error(error);
                        }
                    });
                }
            }

            // Call function to send data in chunks of 50 rows
            sendDataInChunks(userIdStatusArray, 50);
        };

        reader.readAsArrayBuffer(file);
    });

    function fetchNonExistentUserIds() {
        $.ajax({
            url: '@Url.Action("GetNonExistentUserIdsProgram", "TrivaAssigment")',
            type: 'GET',
            success: function (result) {
                if (result.success) {
                    $('.UsertoDisplayA, .UsertoDisplayA1').show();
                    displayUserIds(result.nonExistentUserIds, '#nonExistentUserIdsListA', 'User ID not Present','UsertoDisplayA');
                    displayUserIds(result.AddExistentUserIds, '#allreadyUserIds', 'User ID Already Present','UsertoDisplayA1');
                } else {
                    alert("Error: Could not retrieve non-existent user IDs.");
                }
            },
            error: function (error) {
                alert("Error occurred while fetching non-existent user IDs.");
                console.error(error);
            }
        });
        }
        function displayUserIds(userIds, elementId, headerText, sectionClass) {
            var element = $(elementId);
            element.empty(); // Clear any existing items

            if (userIds && userIds.length > 0) {
                userIds.forEach(function (userId) {
                    var row = $('<tr>');
                    var cell = $('<td>').text(userId);
                    row.append(cell);
                    element.append(row);
                });

                // Show the relevant section if there are user IDs
                $(sectionClass).show();
            } else {
                var row = $('<tr>');
                var cell = $('<td>').text(headerText);
                row.append(cell);
                element.append(row);

                // Hide the relevant section if there are no user IDs
                $(sectionClass).hide();
            }
        }

    //function displayUserIds(userIds, elementId, headerText) {
    //    var element = $(elementId);
    //    element.empty(); // Clear any existing items

    //    if (userIds && userIds.length > 0)
    //    {
    //        userIds.forEach(function (userId) {
    //            var row = $('<tr>');
    //            var cell = $('<td>').text(userId);
    //            row.append(cell);
    //            element.append(row);
    //        });

    //        if (elementId === '#nonExistentUserIdsListA')
    //        {
    //            $('.UsertoDisplayA, .UsertoDisplayA1').show();
    //        }
    //    }
    //    else
    //    {
    //        var row = $('<tr>');
    //        var cell = $('<td>').text(headerText);
    //        row.append(cell);
    //        element.append(row);

    //        if (elementId === '#nonExistentUserIdsListA')
    //        {
    //            $('.UsertoDisplayA, .UsertoDisplayA1').hide();
    //        }
    //    }
    //}

    function validateSelection() {
        debugger;

        var std = $("#datetimepicker1").val();
        var exd = $("#datetimepicker2").val();


        if (!std) {
            showModalMessage("Select Start Date to attach with Assessment");
            return false; // Validation failed
        }
        if (!exd) {
            showModalMessage("Select End Date to attach with Assessment");
            return false; // Validation failed
        }

        return true; // Validation passed
    }

    function showModalMessage(message) {
        loading_off();
        $("#msg-txt").html("<p>" + message + "</p>");
        $('#m2ost-dialog').modal('show');
    }
    });

        function removeProgramToUser(value) {

        if (value > 0) {
            const url_1 = window.location.href;  // This will get the current URL dynamically

            // Split the URL by '/' and get the last segment
            const segments = url_1.split('/');

            // Extract the last part dynamically
            const sid = segments[segments.length - 1];
            var cid = $("#id_Category").val();

            var url = '@Url.Action("removeTrivaAssessmentToUser", "TrivaAssigment")';
            $.ajax({
                type: 'POST',
                url: url,
                data: { cid: cid, value: value, sid: sid, type: "0" },
                success: function (data) {
                    if (data == "1") {
                        $("#link_" + value).hide();
                        $("#done_" + value).show();

                    }
                }
            });
        }
    }

        function check_Deactive() {
            debugger;
        if ($("#checkAll1").prop('checked') == true) {
            $('.myCheckbox_D').prop('checked', true);


            var tdText = $("td").text();

            // Use a regular expression to extract the date
            var dateMatch = tdText.match(/\(\s*(\d{1,2}\/\d{1,2}\/\d{4})\s*to\s*(\d{1,2}\/\d{1,2}\/\d{4})\s*\)/);


        }
        else {
            $('.myCheckbox_D').prop('checked', false);
        }


    }

    function Deactive() {
        debugger;
    loading_on();
    var checkedCheckboxes = document.querySelectorAll('.myCheckbox_D:checked');
    var values = [];
    checkedCheckboxes.forEach(function (checkbox) {
        values.push(checkbox.value);
    });

    if (values.length > 0) {
        var cid = $("#id_Category").val();
        const url_1 = window.location.href;  // This will get the current URL dynamically

        // Split the URL by '/' and get the last segment
        const segments = url_1.split('/');

        // Extract the last part dynamically
        const sid = segments[segments.length - 1];
        var url = '@Url.Action("removeProgramToUserall_1", "TrivaAssigment")';

        $.ajax({
            type: 'POST',
            url: url,
            data: { cid: cid, sid: sid, values: values, type: "0" },
            success: function (data) {
                loading_off();
                if (data == "1") {
                    checkedCheckboxes.forEach(function (checkbox) {
                        checkbox.checked = false;
                        $("#link_" + checkbox.value).hide();
                        $("#done_" + checkbox.value).show();
                    });
                    $('#checkAll1').prop('checked', false);
                    $("#msg-txt").html("<p>Unassign all the users</p>");
                    $('#m2ost-dialog').modal('show');
                }
            }
        });
    }
    }
    function check_all() {
        if ($("#checkAll").prop('checked') == true) {
            $('.myCheckbox').prop('checked', true);
        }
        else {
            $('.myCheckbox').prop('checked', false);
        }
    }
      function Multi_user() {
      debugger
      if ($('.myCheckbox:checked').length === 0) {
          alert("Please select at least one checkbox");
      } else {
          $('#notification-to-all').prop('disabled', true);

          const url_1 = window.location.href;  // This will get the current URL dynamically

          // Split the URL by '/' and get the last segment
          const segments = url_1.split('/');

          // Extract the last part dynamically
          const sid = segments[segments.length - 1];

          $("#id_sbCategory").val(sid);
          var std = $("#datetimepicker1").val();
          var exd = $("#datetimepicker2").val();
          var rid = $("#role-select").val();
          console.log(rid);
          $('#role-Id').val(rid);
          if (std && exd) {
              var form_data = $("#Assessment_form").serialize();
              var url = '@Url.Action("setTrivaToMultiUser", "TrivaAssigment")';
              $.ajax({
                  type: 'POST',
                  url: url,
                  data: form_data,
                  success: function (data) {
                      if (data == "1") {
                          $('#notification-to-all').prop('disabled', false);
                          $("#msg-txt").html("<p>Assessment to selected Users are Assigned.</p>");
                          $('#m2ost-dialog').modal('show');
                          setTimeout(function () {
                              $("#div-remove").show();
                              $("#div-alert").hide();

                          }, 3000);
                      }
                  }
              });
          } else {
              $("#msg-txt").html("<p>Please select Start and Expiry Date For Assessment</p>");
              $('#m2ost-dialog').modal('show');
          }
      }
    }

           function addProgramToAll(value) {
                loading_on();
                $("#programToAll").prop('disabled', true);

                var value = $("#role-select").val();
                var std = $("#datetimepicker1").val();
                var exd = $("#datetimepicker2").val();
               var cid = $("#id_Category").val();

               const url_1 = window.location.href;  // This will get the current URL dynamically

               // Split the URL by '/' and get the last segment
               const segments = url_1.split('/');

               // Extract the last part dynamically
               const sid = segments[segments.length - 1];

                if (std && exd) {



                    var url = '@Url.Action("setTrivaToAllUser", "TrivaAssigment")';
                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: {  value: 0, type: "1", cdt: std, edt: exd, cid: cid, sid: sid},
                        success: function (data) {
                            loading_off();
                            $("#programToAll").prop('disabled', false);
                            if (data == "1") {
                                $("#msg-txt").html("<p>Assessment to All User Role Assigned.</p>");
                                $('#m2ost-dialog').modal('show');
                                setTimeout(function () {

                                    $("#div-alert").hide();

                                }, 3000);
                            }
                            if (data == "0") {
                                $("#msg-txt").html("<p>Assessment to All User Role Assigned.</p>");
                                $('#m2ost-dialog').modal('show');
                                setTimeout(function () {

                                    $("#div-alert").hide();

                                }, 3000);
                            }
                        }
                    });
                } else {
                    $("#msg-txt").html("<p>Please select Start and Expiry Date For Assessment</p>");
                    $('#m2ost-dialog').modal('show');
                }
    }

    function addProgramToRole(value) {
        debugger;
    var rValue = $("#role-select").val();
    var status = $('input[name="role-checkbox"]:checked').length > 0;
    if (status) {

        var std = $("#datetimepicker1").val();
        var exd = $("#datetimepicker2").val();
        var ctid = $("#tile-category").val();
        var chid = $("#heading-category").val();
        var ncid = $("#notification-select").val();
        var nid = 0;
       

            if (std && exd) {
                if (rValue > 0) {

                    var cid = $("#id_program").val();

                    var url = '@Url.Action("addtotheRole", "contentDashboard")';
                    $.ajax({
                        type: 'POST',
                        url: url,
                        data: { cid: cid, value: rValue, type: "1", cdt: std, edt: exd, nid: nid },
                        success: function (data) {
                            if (data == "1") {
                                $("#msg-txt").html("<p>Program to User Role Assigned.</p>");
                                $('#m2ost-dialog').modal('show');
                                setTimeout(function () {
                                    $("#div-alert").hide();

                                }, 3000);
                            }
                        }
                    });
                }
            } else {
                $('#role-checkbox').bootstrapSwitch('state', false, false);
                $("#msg-txt").html("<p>Please select Start and Expiry Date For Program</p>");
                $('#m2ost-dialog').modal('show');
            }
       
      
    } else {

        var cid = $("#id_program").val();
        if (rValue > 0) {

            var url = '@Url.Action("removeProgramRoleAsignment_1", "contentDashboard")';
            $.ajax({
                type: 'POST',
                url: url,
                data: { pid: cid, rid: rValue },
                success: function (data) {
                    if (data == "1") {
                        $("#msg-txt").html("<p>Program to User Role Assignmet Removed.</p>");
                        $('#m2ost-dialog').modal('show');
                        setTimeout(function () {
                            $("#div-alert").hide();

                        }, 3000);
                    }
                }
            });
        }
    }
}

</script>
